[{"/home/julian/web_projects/react-sidebar-dropdown/front/src/index.js":"1","/home/julian/web_projects/react-sidebar-dropdown/front/src/App.js":"2","/home/julian/web_projects/react-sidebar-dropdown/front/src/components/Sidebar.js":"3","/home/julian/web_projects/react-sidebar-dropdown/front/src/pages/Overview.js":"4","/home/julian/web_projects/react-sidebar-dropdown/front/src/pages/Reports.js":"5","/home/julian/web_projects/react-sidebar-dropdown/front/src/pages/Team.js":"6","/home/julian/web_projects/react-sidebar-dropdown/front/src/components/SidebarData.js":"7","/home/julian/web_projects/react-sidebar-dropdown/front/src/components/SubMenu.js":"8","/home/julian/web_projects/react-sidebar-dropdown/front/src/components/fileupload/FileUpload.js":"9","/home/julian/web_projects/react-sidebar-dropdown/front/src/components/fileupload/fileUploadStyles.js":"10","/home/julian/web_projects/react-sidebar-dropdown/front/src/hooks/usePrevious.js":"11","/home/julian/web_projects/react-sidebar-dropdown/front/src/components/chartbasic/chartbasic.js":"12","/home/julian/web_projects/react-sidebar-dropdown/front/src/components/scatterbasic/scatter.js":"13","/home/julian/web_projects/react-sidebar-dropdown/front/src/components/heatmapbasic/heatmapchart.js":"14","/home/julian/web_projects/react-sidebar-dropdown/front/src/components/heatmapMio/mainHeat.js":"15","/home/julian/web_projects/react-sidebar-dropdown/front/src/components/filter/filter.js":"16","/home/julian/web_projects/react-sidebar-dropdown/front/src/components/smallSquareCo/smallSquareCo.js":"17","/home/julian/web_projects/react-sidebar-dropdown/front/src/components/filterDod/filterDos.js":"18","/home/julian/web_projects/react-sidebar-dropdown/front/src/components/filterDod/button.js":"19","/home/julian/web_projects/react-sidebar-dropdown/front/src/components/cardInter/cardIntersection.js":"20","/home/julian/web_projects/react-sidebar-dropdown/front/src/components/upset/upset.js":"21","/home/julian/web_projects/react-sidebar-dropdown/front/src/forstudy/tres.js":"22","/home/julian/web_projects/react-sidebar-dropdown/front/src/components/network/network.js":"23","/home/julian/web_projects/react-sidebar-dropdown/front/src/components/citoNetw/citoNet.js":"24","/home/julian/web_projects/react-sidebar-dropdown/front/src/components/citoNetw/cytoscape.js":"25","/home/julian/web_projects/react-sidebar-dropdown/front/src/components/citoNetwDos/citoNetD.js":"26","/home/julian/web_projects/react-sidebar-dropdown/front/src/components/tresDGraph/TresDGraph.js":"27","/home/julian/web_projects/react-sidebar-dropdown/front/src/components/tresDGraph/TresDGraphFoc.js":"28","/home/julian/web_projects/react-sidebar-dropdown/front/src/utils/canvasSave.js":"29"},{"size":175,"mtime":1633231053952,"results":"30","hashOfConfig":"31"},{"size":4007,"mtime":1635437269355,"results":"32","hashOfConfig":"31"},{"size":3286,"mtime":1630400265765,"results":"33","hashOfConfig":"31"},{"size":2980,"mtime":1634696759873,"results":"34","hashOfConfig":"31"},{"size":25394,"mtime":1635308015009,"results":"35","hashOfConfig":"31"},{"size":148,"mtime":1630356709037,"results":"36","hashOfConfig":"31"},{"size":1957,"mtime":1630388680756,"results":"37","hashOfConfig":"31"},{"size":1591,"mtime":1630356709037,"results":"38","hashOfConfig":"31"},{"size":6795,"mtime":1630978048631,"results":"39","hashOfConfig":"31"},{"size":4064,"mtime":1630599665929,"results":"40","hashOfConfig":"31"},{"size":498,"mtime":1630805008909,"results":"41","hashOfConfig":"31"},{"size":1300,"mtime":1631075409115,"results":"42","hashOfConfig":"31"},{"size":1301,"mtime":1631148179747,"results":"43","hashOfConfig":"31"},{"size":2367,"mtime":1631358730766,"results":"44","hashOfConfig":"31"},{"size":5674,"mtime":1632370520312,"results":"45","hashOfConfig":"31"},{"size":2598,"mtime":1632284236984,"results":"46","hashOfConfig":"31"},{"size":2001,"mtime":1631848734137,"results":"47","hashOfConfig":"31"},{"size":3495,"mtime":1632368318803,"results":"48","hashOfConfig":"31"},{"size":788,"mtime":1632344513887,"results":"49","hashOfConfig":"31"},{"size":614,"mtime":1632422472171,"results":"50","hashOfConfig":"31"},{"size":698,"mtime":1632546312950,"results":"51","hashOfConfig":"31"},{"size":13017,"mtime":1635445724813,"results":"52","hashOfConfig":"31"},{"size":1378,"mtime":1633292452337,"results":"53","hashOfConfig":"31"},{"size":578,"mtime":1633302901496,"results":"54","hashOfConfig":"31"},{"size":200,"mtime":1633302887852,"results":"55","hashOfConfig":"31"},{"size":6056,"mtime":1635021492359,"results":"56","hashOfConfig":"31"},{"size":710,"mtime":1635446135329,"results":"57","hashOfConfig":"31"},{"size":4052,"mtime":1635055921405,"results":"58","hashOfConfig":"31"},{"size":9607,"mtime":1634986588012,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1ylpe0n",{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"/home/julian/web_projects/react-sidebar-dropdown/front/src/index.js",[],["123","124"],"/home/julian/web_projects/react-sidebar-dropdown/front/src/App.js",[],"/home/julian/web_projects/react-sidebar-dropdown/front/src/components/Sidebar.js",[],"/home/julian/web_projects/react-sidebar-dropdown/front/src/pages/Overview.js",[],"/home/julian/web_projects/react-sidebar-dropdown/front/src/pages/Reports.js",[],"/home/julian/web_projects/react-sidebar-dropdown/front/src/pages/Team.js",[],"/home/julian/web_projects/react-sidebar-dropdown/front/src/components/SidebarData.js",[],"/home/julian/web_projects/react-sidebar-dropdown/front/src/components/SubMenu.js",[],"/home/julian/web_projects/react-sidebar-dropdown/front/src/components/fileupload/FileUpload.js",[],"/home/julian/web_projects/react-sidebar-dropdown/front/src/components/fileupload/fileUploadStyles.js",[],"/home/julian/web_projects/react-sidebar-dropdown/front/src/hooks/usePrevious.js",[],"/home/julian/web_projects/react-sidebar-dropdown/front/src/components/chartbasic/chartbasic.js",[],"/home/julian/web_projects/react-sidebar-dropdown/front/src/components/scatterbasic/scatter.js",[],"/home/julian/web_projects/react-sidebar-dropdown/front/src/components/heatmapbasic/heatmapchart.js",[],["125","126"],"/home/julian/web_projects/react-sidebar-dropdown/front/src/components/heatmapMio/mainHeat.js",[],"/home/julian/web_projects/react-sidebar-dropdown/front/src/components/filter/filter.js",["127","128"],"/home/julian/web_projects/react-sidebar-dropdown/front/src/components/smallSquareCo/smallSquareCo.js",[],"/home/julian/web_projects/react-sidebar-dropdown/front/src/components/filterDod/filterDos.js",[],"/home/julian/web_projects/react-sidebar-dropdown/front/src/components/filterDod/button.js",[],"/home/julian/web_projects/react-sidebar-dropdown/front/src/components/cardInter/cardIntersection.js",[],"/home/julian/web_projects/react-sidebar-dropdown/front/src/components/upset/upset.js",[],"/home/julian/web_projects/react-sidebar-dropdown/front/src/forstudy/tres.js",[],"/home/julian/web_projects/react-sidebar-dropdown/front/src/components/network/network.js",[],["129","130"],"/home/julian/web_projects/react-sidebar-dropdown/front/src/components/citoNetw/citoNet.js",[],"/home/julian/web_projects/react-sidebar-dropdown/front/src/components/citoNetw/cytoscape.js",[],"/home/julian/web_projects/react-sidebar-dropdown/front/src/components/citoNetwDos/citoNetD.js",["131","132","133"],"import React, { useState, useContext, useEffect } from \"react\";\nimport CytoscapeComponent from \"react-cytoscapejs\";\nimport { NameContext } from \"../../App\";\nimport fcose from \"cytoscape-fcose\";\n//import COSEBilkent from \"cytoscape-cose-bilkent\";\nimport Cytoscape from \"cytoscape\";\n//Cytoscape.use(COSEBilkent);\nCytoscape.use(fcose);\nexport default function NApp() {\n  const {\n    //initial,\n\n    forNetworkFiltered,\n  } = useContext(NameContext);\n\n  console.log(forNetworkFiltered, \"forNetworkFilteredforNetworkFiltered\");\n  const [width, setWith] = useState(\"100%\");\n  const [height, setHeight] = useState(\"100vh\");\n\n  /*  const [graphData, setGraphData] = useState({\n    nodes: [\n      { data: { id: \"1\", label: \"IP 1\", type: \"ip\" } },\n      { data: { id: \"2\", label: \"Device 1\", type: \"device\" } },\n      { data: { id: \"3\", label: \"IP 2\", type: \"ip\" } },\n      { data: { id: \"4\", label: \"Device 2\", type: \"device\" } },\n      { data: { id: \"5\", label: \"Device 3\", type: \"device\" } },\n      { data: { id: \"6\", label: \"IP 3\", type: \"ip\" } },\n      { data: { id: \"7\", label: \"Device 5\", type: \"device\" } },\n      { data: { id: \"8\", label: \"Device 6\", type: \"device\" } },\n      { data: { id: \"9\", label: \"Device 7\", type: \"device\" } },\n      { data: { id: \"10\", label: \"Device 8\", type: \"device\" } },\n      { data: { id: \"11\", label: \"Device 9\", type: \"device\" } },\n      { data: { id: \"12\", label: \"IP 3\", type: \"ip\" } },\n      { data: { id: \"13\", label: \"Device 10\", type: \"device\" } },\n    ],\n    edges: [\n      {\n        data: { source: \"1\", target: \"2\", label: \"Node2\" },\n      },\n      {\n        data: { source: \"3\", target: \"4\", label: \"Node4\" },\n      },\n      {\n        data: { source: \"3\", target: \"5\", label: \"Node5\" },\n      },\n      {\n        data: { source: \"6\", target: \"5\", label: \" 6 -> 5\" },\n      },\n      {\n        data: { source: \"6\", target: \"7\", label: \" 6 -> 7\" },\n      },\n      {\n        data: { source: \"6\", target: \"8\", label: \" 6 -> 8\" },\n      },\n      {\n        data: { source: \"6\", target: \"9\", label: \" 6 -> 9\" },\n      },\n      {\n        data: { source: \"3\", target: \"13\", label: \" 3 -> 13\" },\n      },\n    ],\n  }); */\n\n  const [graphData, setGraphData] = useState({});\n  // const [layout, setLayout] = useState([]);\n\n  useEffect(() => {\n    setGraphData(forNetworkFiltered);\n\n    //setLayout(layout);\n  }, [forNetworkFiltered]);\n\n  const layout = {\n    name: \"cose-bilkent\",\n    directed: false,\n    avoidOverlap: true,\n    spacingFactor: 2.5,\n  };\n\n  const layoutD = {\n    animate: false,\n    animationDuration: undefined,\n    animationEasing: undefined,\n    boundingBox: undefined,\n    componentSpacing: 40,\n    coolingFactor: 0.99,\n    fit: true,\n    gravity: 1,\n    initialTemp: 1000,\n    minTemp: 1.0,\n    name: \"fcose\",\n    nestingFactor: 1.2,\n    nodeDimensionsIncludeLabels: false,\n    nodeOverlap: 4,\n    numIter: 1000,\n    padding: 30,\n\n    /*  nodeRepulsion: (node) => 4500,\n    // Ideal edge (non nested) length\n    idealEdgeLength: (edge) => 50,\n    // Divisor to compute edge forces\n    edgeElasticity: (edge) => 0.45, */\n\n    position(node) {\n      return { row: node.data(\"row\"), col: node.data(\"col\") };\n    },\n    randomize: true,\n    refresh: 20,\n  };\n\n  /*   const layout = {\n    name: \"breadthfirst\",\n    fit: true,\n    // circle: true,\n    directed: false,\n    padding: 50,\n    // spacingFactor: 1.5,\n    animate: true,\n    animationDuration: 1000,\n    avoidOverlap: true,\n    nodeDimensionsIncludeLabels: false,\n  }; */\n\n  const styleSheet = [\n    {\n      selector: \"node\",\n      style: {\n        backgroundColor: \"#4a56a6\",\n        width: 30,\n        height: 30,\n        label: \"data(label)\",\n\n        // \"width\": \"mapData(score, 0, 0.006769776522008331, 20, 60)\",\n        // \"height\": \"mapData(score, 0, 0.006769776522008331, 20, 60)\",\n        // \"text-valign\": \"center\",\n        // \"text-halign\": \"center\",\n        \"overlay-padding\": \"6px\",\n        \"z-index\": \"10\",\n        //text props\n        \"text-outline-color\": \"#4a56a6\",\n        \"text-outline-width\": \"2px\",\n        color: \"white\",\n        fontSize: 20,\n      },\n    },\n    {\n      selector: \"node:selected\",\n      style: {\n        \"border-width\": \"6px\",\n        \"border-color\": \"#AAD8FF\",\n        \"border-opacity\": \"0.5\",\n        \"background-color\": \"#77828C\",\n        width: 50,\n        height: 50,\n        //text props\n        \"text-outline-color\": \"#77828C\",\n        \"text-outline-width\": 8,\n      },\n    },\n    {\n      selector: \"node[type='device']\",\n      style: {\n        shape: \"rectangle\",\n      },\n    },\n    {\n      selector: \"edge\",\n      style: {\n        width: 3,\n        // \"line-color\": \"#6774cb\",\n        \"line-color\": \"#AAD8FF\",\n        //\"target-arrow-color\": \"#6774cb\",\n        /* \"target-arrow-shape\": \"triangle\",\n        \"curve-style\": \"bezier\", */\n      },\n    },\n  ];\n\n  let myCyRef;\n\n  return (\n    <>\n      {Object.keys(forNetworkFiltered).length > 0 ? (\n        <div>\n          <h1>Cytoscape exampleAqui</h1>\n          <div\n            style={{\n              border: \"1px solid\",\n              backgroundColor: \"#f5f6fe\",\n            }}\n          >\n            <CytoscapeComponent\n              elements={CytoscapeComponent.normalizeElements(graphData)}\n              // pan={{ x: 200, y: 200 }}\n              style={{ width: width, height: height }}\n              zoomingEnabled={true}\n              maxZoom={3}\n              minZoom={0.1}\n              autounselectify={false}\n              boxSelectionEnabled={true}\n              layout={layoutD}\n              stylesheet={styleSheet}\n              cy={(cy) => {\n                myCyRef = cy;\n\n                console.log(\"EVT\", cy);\n\n                cy.on(\"add\", \"tap\", \"node\", (evt) => {\n                  var node = evt.target;\n\n                  console.log(\"EVT\", evt);\n                  console.log(\"TARGET\", node.data());\n                  console.log(\"TARGET TYPE\", typeof node[0]);\n                });\n              }}\n              abc={console.log(\"myCyRef\", myCyRef)}\n            />\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n}\n","/home/julian/web_projects/react-sidebar-dropdown/front/src/components/tresDGraph/TresDGraph.js",[],"/home/julian/web_projects/react-sidebar-dropdown/front/src/components/tresDGraph/TresDGraphFoc.js",["134"],"import React, {\n  useRef,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\nimport * as THREE from \"three\";\n//import domtoimage from \"dom-to-image\";\nimport Canvas2Image from \"../../utils/canvasSave\";\nimport SpriteText from \"three-spritetext\";\nimport { ForceGraph3D } from \"react-force-graph\";\n\nimport { NameContext } from \"../../App\";\n\n/* \nconst myData = {\n  nodes: [\n    {\n      id: \"id1\",\n      name: \"name1\",\n      color: \"green\",\n      val: 1,\n    },\n    {\n      id: \"id2\",\n      name: \"name2\",\n      color: \"blue\",\n      val: 10,\n    },\n  ],\n  links: [\n    {\n      source: \"id1\",\n      target: \"id2\",\n    },\n  ],\n}; */\n\nexport const FocusGraph = () => {\n  const { forNetworkFiltered } = useContext(NameContext);\n  console.log(forNetworkFiltered, \"forNetworkFilteredforNetworkFiltered\");\n  const [graphData, setGraphData] = useState({});\n  // const [layout, setLayout] = useState([]);\n\n  useEffect(() => {\n    /*     forNetworkFiltered.links = forNetworkFiltered.edges; // on object create new key name. Assign old value to this\n    delete forNetworkFiltered.edges; */\n\n    if (forNetworkFiltered.nodes !== undefined) {\n      let nodes = forNetworkFiltered.nodes.map((elem) => {\n        return {\n          id: elem.data.id,\n          name: elem.data.label,\n          type: elem.data.type,\n          color: \"green\",\n        };\n      });\n\n      let links = forNetworkFiltered.edges.map((elem) => {\n        return elem.data;\n      });\n\n      var data4Graph = {\n        nodes: [],\n        links: [],\n      };\n\n      data4Graph.nodes.push(...nodes);\n      data4Graph.links.push(...links);\n      setGraphData(data4Graph);\n      console.log(data4Graph, \"data4GraphAqui\");\n    }\n\n    //setLayout(layout);\n  }, [forNetworkFiltered]);\n\n  console.log(graphData, \"forNetworkFilteredThree\");\n\n  const fgRef = useRef();\n\n  const handleClick = useCallback(\n    (node) => {\n      // Aim at node from outside it\n      const distance = 40;\n      const distRatio = 1 + distance / Math.hypot(node.x, node.y, node.z);\n\n      fgRef.current.cameraPosition(\n        { x: node.x * distRatio, y: node.y * distRatio, z: node.z * distRatio }, // new position\n        node, // lookAt ({ x, y, z })\n        3000 // ms transition duration\n      );\n      console.log(\"object cliqueado\");\n    },\n    [fgRef]\n  );\n\n  function exportToPng(dom) {\n    console.log(dom, \"dom\");\n    //dom.scene().background = new THREE.Color(0xff0000);\n\n    var canvasf = dom.renderer();\n    canvasf.getClearColor();\n\n    console.log(canvasf, \"canvasf\");\n    var newA = canvasf.domElement;\n    console.log(newA, \"newA\");\n    Canvas2Image.saveAsPNG(newA, newA.width, newA.height);\n    //Canvas2Image.saveAsJPEG(canvasObj, width, height)\n    //Canvas2Image.saveAsGIF(canvasObj, width, height)\n    //Canvas2Image.saveAsBMP(canvasObj, width, height)\n\n    /*     var newC = canvasf.domElement.toDataURL(\"image/png\");\n    var img = new Image();\n    img.crossOrigin = \"anonymous\";\n    img.src = newC;\n    img.alt = \"from canvas\";\n    document.body.appendChild(img); */\n  }\n\n  function clearAlpha(dom) {\n    var canvasf = dom.renderer();\n\n    canvasf.setClearAlpha(0);\n  }\n\n  return (\n    <>\n      {Object.keys(graphData).length > 0 ? (\n        <>\n          <ForceGraph3D\n            ref={fgRef}\n            graphData={graphData}\n            nodeLabel=\"id\"\n            nodeAutoColorBy=\"group\"\n            onNodeClick={handleClick}\n            rendererConfig={{ preserveDrawingBuffer: true, alpha: true }}\n            nodeRelSize=\"8\"\n            nodeResolution=\"12\"\n            linkOpacity=\"0.5\"\n            linkResolution=\"10\"\n            nodeThreeObject={(node) => {\n              const sprite = new SpriteText(node.id);\n              sprite.color = node.color;\n              sprite.textHeight = 8;\n              return sprite;\n            }}\n\n            //backgroundColor=\"grey\"\n          />\n\n          <button onClick={() => exportToPng(fgRef.current)}>Aqui</button>\n\n          <button onClick={() => clearAlpha(fgRef.current)}>clear</button>\n        </>\n      ) : null}\n    </>\n  );\n};\n","/home/julian/web_projects/react-sidebar-dropdown/front/src/utils/canvasSave.js",[],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"135","replacedBy":"139"},{"ruleId":"137","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":5,"column":11,"nodeType":"143","messageId":"144","endLine":5,"endColumn":37},{"ruleId":"141","severity":1,"message":"145","line":9,"column":19,"nodeType":"143","messageId":"144","endLine":9,"endColumn":29},{"ruleId":"135","replacedBy":"146"},{"ruleId":"137","replacedBy":"147"},{"ruleId":"141","severity":1,"message":"148","line":17,"column":17,"nodeType":"143","messageId":"144","endLine":17,"endColumn":24},{"ruleId":"141","severity":1,"message":"149","line":18,"column":18,"nodeType":"143","messageId":"144","endLine":18,"endColumn":27},{"ruleId":"141","severity":1,"message":"150","line":73,"column":9,"nodeType":"143","messageId":"144","endLine":73,"endColumn":15},{"ruleId":"141","severity":1,"message":"151","line":8,"column":13,"nodeType":"143","messageId":"144","endLine":8,"endColumn":18},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],["152"],["153"],"no-unused-vars","'setDataToProviderFilteredR' is assigned a value but never used.","Identifier","unusedVar","'setMergedL' is assigned a value but never used.",["152"],["153"],"'setWith' is assigned a value but never used.","'setHeight' is assigned a value but never used.","'layout' is assigned a value but never used.","'THREE' is defined but never used.","no-global-assign","no-unsafe-negation"]